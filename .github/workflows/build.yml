name: Build and Test

# run the workflow on push to master branch or pull request to master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        torch-version: [2.5.0]  # [2.3.0, 2.4.0, 2.5.0]
        cuda-version: ['cpu'] # 'cu118', 'cu121', 'cu124'
        exclude:
          - torch-version: 2.5.0
            python-version: '3.8'

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check runner OS
        run: echo "Runner OS is ${{ runner.os }}"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Free Disk Space (Ubuntu)
        if: ${{ runner.os == 'Linux' }}
        uses: jlumbroso/free-disk-space@main

      - name: Install PyTorch ${{ matrix.torch-version }}+${{ matrix.cuda-version }}
        run: |
          pip install numpy
          pip install torch==${{ matrix.torch-version }} --extra-index-url https://download.pytorch.org/whl/${{ matrix.cuda-version }}
          python -c "import torch; print('PyTorch:', torch.__version__)"
          python -c "import torch; print('CUDA:', torch.version.cuda)"

      - name: install GL and x11 for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libgl1-mesa-dev libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev

      - name: Run install script on Windows
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          install.cmake.bat

      - name: Run install script on Unix (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          chmod +x ./install.cmake.sh
          ./install.cmake.sh


